<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Cognitive Bias Codex — Cinematic</title>

  <!-- Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=Inter:wght@300;400;600&display=swap" rel="stylesheet">

  <!-- Tailwind CDN -->
  <script src="https://cdn.tailwindcss.com"></script>

  <!-- GSAP -->
  <script src="https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/gsap.min.js"></script>

  <style>
    :root{
      --cinema-bg: #04050a;
      --accent: #06b6d4;
    }
    html,body{height:100%}
    body{
      background: radial-gradient(1200px 600px at 10% 10%, rgba(12,18,30,0.35), transparent),
                  var(--cinema-bg);
      font-family: "Inter", system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;
      -webkit-font-smoothing:antialiased;
      color: #e6eef6;
      margin:0;
      overflow-x:hidden;
    }

    /* Poster / Hero */
    #posterWrap{
      min-height: 74vh;
      display:flex;
      align-items:center;
      justify-content:center;
      padding: clamp(24px, 5vh, 48px);
    }
    .poster {
      width: min(960px, 94%);
      max-width: 980px;
      border-radius: 12px;
      overflow: hidden;
      position: relative;
      box-shadow: 0 30px 80px rgba(2,6,23,0.8), inset 0 -30px 80px rgba(0,0,0,0.35);
      background: linear-gradient(180deg, rgba(4,7,12,0.65), rgba(3,6,10,0.9));
      border: 1px solid rgba(255,255,255,0.03);
    }
    .poster-image {
      display:block;
      width:100%;
      height: auto;
      transform-origin:center;
      filter: saturate(.85) contrast(.95) brightness(.92);
      max-height: 520px;
      object-fit: cover;
    }
    .poster-overlay {
      position:absolute; inset:0; display:flex; flex-direction:column; justify-content:flex-end; padding:28px; gap:12px;
      background: linear-gradient(180deg, rgba(0,0,0,0.05) 0%, rgba(0,0,0,0.55) 55%, rgba(0,0,0,0.8) 100%);
    }

    .title {
      font-family: "Cinzel", serif;
      font-weight:700;
      color: #fff;
      letter-spacing: 6px;
      text-transform:uppercase;
      font-size: clamp(18px, 2.2vw, 28px);
    }
    .subtitle {
      color: #bcd6df;
      font-weight: 400;
      font-size: clamp(12px, 1.3vw, 16px);
    }

    /* Play button */
    .play-btn {
      width:86px; height:86px; border-radius:999px;
      display:flex; align-items:center; justify-content:center;
      background: radial-gradient(circle at 30% 20%, rgba(255,255,255,0.08), transparent),
                  linear-gradient(180deg, rgba(0,120,255,0.12), rgba(3,160,130,0.14));
      border: 1px solid rgba(255,255,255,0.06);
      box-shadow: 0 12px 40px rgba(3,160,130,0.12);
      cursor:pointer;
      backdrop-filter: blur(2px);
    }
    .play-triangle {
      width:0; height:0; border-left:20px solid #fff; border-top:12px solid transparent; border-bottom:12px solid transparent;
      margin-left:4px;
    }
    .play-hint { font-size:13px; color:#dff7fb; text-align:center; margin-top:6px; letter-spacing:0.6px; }

    /* Filmstrip thumbnails */
    .filmstrip {
      display:flex; gap:12px; padding:14px; margin-top:18px; align-items:center; justify-content:center; flex-wrap:wrap;
      background: linear-gradient(180deg, rgba(255,255,255,0.01), rgba(255,255,255,0.02));
      border-top:1px solid rgba(255,255,255,0.02);
    }
    .thumb {
      width:120px; min-width:120px; background:linear-gradient(180deg, rgba(255,255,255,0.02), rgba(0,0,0,0.25));
      border-radius:8px; padding:8px; cursor:pointer; box-shadow: 0 8px 24px rgba(2,6,23,0.6);
      display:flex; gap:8px; align-items:center;
    }
    .thumb img { width:44px; height:44px; object-fit:cover; border-radius:6px; flex-shrink:0; }
    .thumb .meta { font-size:13px; color:#e9f5fa }
    .thumb .meta .name { font-weight:600; color:#fff; }
    .thumb.active { outline: 2px solid rgba(6,182,212,0.16); transform: translateY(-6px); }

    /* Cinematic overlay */
    #cinemaOverlay {
      position: fixed; inset:0; z-index:80; display:flex; align-items:center; justify-content:center; pointer-events:none;
      visibility:hidden; opacity:0;
    }
    #cinemaScreen {
      width: min(1100px, 95%); height: min(66vh, 720px); background: #050509; border-radius:10px; position:relative; overflow:hidden;
      pointer-events:auto; box-shadow: 0 40px 110px rgba(2,6,23,0.9);
    }

    /* letterbox bars */
    .letterbox { position: fixed; left:0; right:0; height:80px; background: #000; z-index:82; transform: translateY(-120%); }
    .letterbox.bottom { bottom:0; top:auto; transform: translateY(120%); }

    /* screen content */
    .screenArea { position:absolute; inset:0; display:flex; align-items:center; justify-content:center; padding:36px; }
    .scene {
      position:absolute; inset:0; display:flex; flex-direction:row; gap:28px; align-items:center; justify-content:center; padding:28px;
      opacity:0; pointer-events:none;
    }
    .scene .scene-left { width: 44%; min-width: 300px; }
    .scene .scene-right { width: 56%; min-width: 360px; color:#dfeef7; }
    .scene .poster-small { width:100%; border-radius:8px; box-shadow: 0 18px 60px rgba(2,6,23,0.7); }
    .scene h2 { font-family: "Cinzel", serif; font-weight:700; letter-spacing:2px; color:#fff; margin:0 0 8px 0; }
    .scene p { margin:0 0 8px 0; line-height:1.45; color:#bcd6df; }
    .scene .hint { color:#9fbfca; font-size:13px; }

    /* controls */
    .controls { position:absolute; left:12px; right:12px; bottom:12px; display:flex; justify-content:space-between; align-items:center; gap:12px; }
    .controls .left { display:flex; gap:8px; align-items:center; }
    .btn {
      background: rgba(255,255,255,0.03); border-radius:8px; padding:10px 12px; font-weight:600; color:#eaf7fa; cursor:pointer; border:1px solid rgba(255,255,255,0.04);
    }
    .btn.ghost { background: transparent; border: 1px solid rgba(255,255,255,0.04) }
    .progress { height:6px; background: rgba(255,255,255,0.06); border-radius:6px; overflow:hidden; width:320px; }
    .progress > i { display:block; height:100%; width:0%; background: linear-gradient(90deg, rgba(6,182,212,0.8), rgba(3,120,255,0.8)); }

    /* Close */
    .close-cinema { position:absolute; right:12px; top:12px; z-index:95; color:#dbeff6; background: rgba(255,255,255,0.02); padding:8px 10px; border-radius:8px; cursor:pointer; border:1px solid rgba(255,255,255,0.03); }

    /* subtle grain overlay */
    .grain {
      pointer-events:none;
      position:fixed; inset:0; z-index:75; opacity:0.06; background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="200" height="200"><filter id="n"><feTurbulence baseFrequency="0.9" numOctaves="2" stitchTiles="stitch"/><feColorMatrix type="saturate" values="0"/></filter><rect width="100%" height="100%" filter="url(%23n)" /></svg>');
      mix-blend-mode: overlay;
    }

    /* responsive tweaks */
    @media (max-width:900px){
      .scene { flex-direction:column; align-items:flex-start; padding:18px; }
      .scene .scene-left, .scene .scene-right { width:100%; min-width:unset; }
      .thumb { width:100%; min-width:unset; }
      .play-btn{ width:72px; height:72px }
    }
  </style>
</head>
<body>

  <!-- Header -->
  <header class="pt-8 text-center">
    <div class="max-w-4xl mx-auto px-4">
      <p class="text-sm tracking-widest text-slate-300 mb-2">AN INTERACTIVE LEARNING EXPERIENCE</p>
      <h1 class="text-4xl md:text-5xl font-extrabold text-white">The Cognitive Bias Codex — <span style="color:var(--accent)">Cinematic</span></h1>
      <p class="text-slate-400 mt-3 max-w-2xl mx-auto">Explore biases like scenes in a film — cinematic transitions, filmstrip navigation, and a theatre-style viewing mode to learn and remember.</p>
    </div>
  </header>

  <!-- Poster/Hero -->
  <section id="posterWrap">
    <div class="poster" role="region" aria-label="Cognitive bias poster">
      <!-- Poster image (codex) -->
      <img class="poster-image" id="posterImg"
           src="https://upload.wikimedia.org/wikipedia/commons/6/65/Cognitive_bias_codex_en.svg"
           alt="Cognitive bias codex poster" />

      <div class="poster-overlay">
        <div class="flex items-center justify-between">
          <div>
            <div class="title">The Cognitive Bias Codex</div>
            <div class="subtitle mt-1">A visual compendium of biases + cinematic learning mode</div>
          </div>

          <div class="text-right">
            <div id="playBtn" class="play-btn" title="Play cinematic tour" role="button" aria-pressed="false">
              <div class="play-triangle"></div>
            </div>
            <div class="play-hint">Start the cinematic tour</div>
          </div>
        </div>

        <!-- filmstrip under the poster -->
        <div class="filmstrip" id="filmstrip"></div>
      </div>
    </div>
  </section>

  <!-- Brief descriptor -->
  <section class="max-w-6xl mx-auto px-4 mb-12">
    <div class="text-center text-slate-400">Click a thumbnail to jump to a scene. Press <strong>Space</strong> to pause/play, <strong>←</strong>/<strong>→</strong> to navigate.</div>
  </section>

  <!-- Cinematic overlay (hidden until play) -->
  <div id="cinemaOverlay" aria-hidden="true">
    <div class="letterbox top" id="letterTop"></div>
    <div id="cinemaScreen">
      <button class="close-cinema" id="closeCinema" aria-label="Close theatre">✕</button>
      <div class="screenArea">
        <!-- Scenes container: slides will be injected here -->
        <div id="scenesWrap" style="position:relative; inset:0; width:100%; height:100%"></div>
      </div>

      <!-- controls -->
      <div class="controls">
        <div class="left">
          <button id="prevBtn" class="btn">Prev</button>
          <button id="playPauseBtn" class="btn">Pause</button>
          <button id="nextBtn" class="btn">Next</button>
        </div>

        <div class="right flex items-center">
          <div class="progress mr-3"><i id="progressBar"></i></div>
          <div class="text-slate-300 text-sm" id="sceneCounter">0 / 0</div>
        </div>
      </div>
    </div>

    <div class="letterbox bottom" id="letterBottom"></div>
  </div>

  <div class="grain" aria-hidden="true"></div>

<script>
/* ============================
   Data: biases (scenes)
   ============================ */
const biases = [
  { name: "Anchoring Bias", category: "Too Much Information", definition: "Relying too heavily on the first piece of information received.", example: "First price seen influences the final agreement.", tip: "Consciously re-evaluate values without the first anchor." },
  { name: "Confirmation Bias", category: "Not Enough Meaning", definition: "Favoring information that confirms existing beliefs.", example: "Only reading news that aligns with your views.", tip: "Seek reputable, contrary sources." },
  { name: "Sunk Cost Fallacy", category: "Need to Act Fast", definition: "Continuing because of past investments rather than future value.", example: "Keeping a failing project due to prior spending.", tip: "Decide based on forward-looking costs/benefits." },
  { name: "Hindsight Bias", category: "What Should We Remember?", definition: "Seeing events as more predictable after they occur.", example: "Claiming 'I knew it all along'.", tip: "Write predictions before outcomes to compare." },
  { name: "Availability Heuristic", category: "Too Much Information", definition: "Estimating probability by ease of recall.", example: "Overestimating plane crash risk after media coverage.", tip: "Use objective statistics; question vivid anecdotes." },
  { name: "Bandwagon Effect", category: "Social", definition: "Adopting beliefs because many others do.", example: "Following trends blindly.", tip: "Analyze fundamentals, not popularity." },
  { name: "Loss Aversion", category: "Decision", definition: "Feeling losses more strongly than equivalent gains.", example: "Avoiding selling losing assets.", tip: "Frame choices symmetrically; set re-eval rules." },
  { name: "Dunning–Kruger Effect", category: "Metacognition", definition: "Low-ability people overestimate their skill.", example: "A novice being overconfident.", tip: "Seek feedback and objective measures." },
  { name: "Clustering Illusion", category: "Not Enough Meaning", definition: "Seeing patterns in random data.", example: "Believing short-term streaks are meaningful.", tip: "Check larger data sets before concluding patterns." },
  { name: "Confirmation Cascade", category: "Social", definition: "When repeated confirmation within a group makes a belief stronger regardless of truth.", example: "Group reinforcement of a false assumption.", tip: "Encourage dissent and outside review." }
];

/* ==============
   DOM refs
   ============== */
const playBtn = document.getElementById('playBtn');
const filmstrip = document.getElementById('filmstrip');
const cinemaOverlay = document.getElementById('cinemaOverlay');
const scenesWrap = document.getElementById('scenesWrap');
const letterTop = document.getElementById('letterTop');
const letterBottom = document.getElementById('letterBottom');
const closeCinema = document.getElementById('closeCinema');
const prevBtn = document.getElementById('prevBtn');
const nextBtn = document.getElementById('nextBtn');
const playPauseBtn = document.getElementById('playPauseBtn');
const progressBar = document.getElementById('progressBar');
const sceneCounter = document.getElementById('sceneCounter');

/* ==============
   Build filmstrip thumbnails
   ============== */
function makeThumb(b,i){
  const t = document.createElement('div');
  t.className = 'thumb';
  t.dataset.index = i;
  t.innerHTML = `
    <img src="https://upload.wikimedia.org/wikipedia/commons/6/65/Cognitive_bias_codex_en.svg" alt="${b.name}" />
    <div class="meta">
      <div class="name">${b.name}</div>
      <div class="text-xs" style="color:#9fbfca">${b.category}</div>
    </div>
  `;
  t.addEventListener('click', ()=> jumpToScene(i));
  return t;
}
biases.forEach((b,i)=> filmstrip.appendChild(makeThumb(b,i)));

/* ==============
   Build scenes (slides)
   ============== */
let scenes = [];
biases.forEach((b, idx) => {
  const s = document.createElement('div');
  s.className = 'scene';
  s.dataset.index = idx;
  s.innerHTML = `
    <div class="scene-left">
      <img class="poster-small" src="https://upload.wikimedia.org/wikipedia/commons/6/65/Cognitive_bias_codex_en.svg" alt="${b.name} poster"/>
    </div>
    <div class="scene-right">
      <h2>${b.name}</h2>
      <p class="hint">${b.category}</p>
      <p><strong>Definition:</strong> ${b.definition}</p>
      ${b.example ? `<p><strong>Example:</strong> ${b.example}</p>` : ''}
      ${b.tip ? `<p><strong>How to avoid it:</strong> ${b.tip}</p>` : ''}
    </div>
  `;
  scenesWrap.appendChild(s);
  scenes.push(s);
});

/* ==============
   Cinematic behavior
   ============== */
let current = 0;
let autoplay = true;
let autoplayInterval = null;
const sceneDuration = 3600; // ms per scene when autoplaying

// helper: set active thumbnail
function setActiveThumb(i){
  filmstrip.querySelectorAll('.thumb').forEach(t=> t.classList.toggle('active', +t.dataset.index === i));
}

// show a specific scene with cinematic animation
function showScene(i, {instant=false} = {}){
  if (i < 0) i = biases.length - 1;
  if (i >= biases.length) i = 0;
  const prev = scenes[current];
  const next = scenes[i];

  // prepare elements
  if (prev && prev !== next){
    // animate prev out
    gsap.to(prev, { opacity: 0, scale: 0.98, duration: 0.45, ease: "power2.inOut", pointerEvents:'none' });
  }
  // bring next in
  next.style.zIndex = 10;
  gsap.fromTo(next, { opacity: 0, y: 18, scale:0.985 }, { opacity: 1, y:0, scale:1, duration: instant ? 0.2 : 0.56, ease: "power3.out", pointerEvents:'auto' });

  // update indices & UI
  current = i;
  sceneCounter.textContent = `${current+1} / ${biases.length}`;
  setActiveThumb(current);

  // progress bar update
  gsap.to(progressBar, { width: `${((current+1)/biases.length)*100}%`, duration: 0.6, ease: "power2.out" });
}

// autoplay control
function startAutoplay(){
  stopAutoplay();
  autoplay = true;
  playPauseBtn.textContent = 'Pause';
  autoplayInterval = setInterval(()=> {
    showScene(current+1);
  }, sceneDuration);
}
function stopAutoplay(){
  autoplay = false;
  playPauseBtn.textContent = 'Play';
  if (autoplayInterval) { clearInterval(autoplayInterval); autoplayInterval = null; }
}

// jump to scene
function jumpToScene(i){
  showScene(i);
  // reset autoplay timer so user sees the scene longer
  if (autoplay) {
    stopAutoplay();
    startAutoplay();
  }
}

/* ==============
   Open / Close cinema
   ============== */
function openCinema(){
  cinemaOverlay.style.visibility = 'visible';
  cinemaOverlay.style.opacity = 1;
  cinemaOverlay.setAttribute('aria-hidden','false');

  // animate letterbox and screen
  gsap.to(letterTop, { y: '120%', duration: 0.42, ease: 'power3.out' });
  gsap.to(letterBottom, { y: '-120%', duration: 0.42, ease: 'power3.out' });
  gsap.fromTo('#cinemaScreen', { scale: 0.98, opacity: 0 }, { scale: 1, opacity: 1, duration: 0.6, ease: 'back.out(1.1)' });

  showScene(0, {instant:true});
  startAutoplay();
}

function closeCinemaOverlay(){
  stopAutoplay();
  gsap.to(letterTop, { y: '0%', duration: 0.32, ease: 'power2.in' });
  gsap.to(letterBottom, { y: '0%', duration: 0.32, ease: 'power2.in' });
  gsap.to('#cinemaScreen', { scale: 0.98, opacity: 0, duration: 0.28, ease: 'power2.in', onComplete: ()=> {
    cinemaOverlay.style.visibility = 'hidden';
    cinemaOverlay.style.opacity = 0;
    cinemaOverlay.setAttribute('aria-hidden','true');
  }});
}

/* ==============
   Controls: events
   ============== */
playBtn.addEventListener('click', ()=>{
  openCinema();
});

closeCinema.addEventListener('click', closeCinemaOverlay);

prevBtn.addEventListener('click', ()=>{
  showScene(current-1);
  if (autoplay){ stopAutoplay(); startAutoplay(); }
});
nextBtn.addEventListener('click', ()=>{
  showScene(current+1);
  if (autoplay){ stopAutoplay(); startAutoplay(); }
});

playPauseBtn.addEventListener('click', ()=>{
  if (autoplay){
    stopAutoplay();
  } else {
    startAutoplay();
  }
});

/* keyboard controls */
document.addEventListener('keydown', (e)=>{
  // only when overlay visible
  if (cinemaOverlay.getAttribute('aria-hidden') === 'false'){
    if (e.key === 'ArrowRight'){ nextBtn.click(); }
    if (e.key === 'ArrowLeft'){ prevBtn.click(); }
    if (e.code === 'Space'){ e.preventDefault(); playPauseBtn.click(); }
    if (e.key === 'Escape'){ closeCinemaOverlay(); }
  }
});

/* ensure first scene hidden but present */
scenes.forEach((s,idx)=>{
  if (idx===0){
    s.style.opacity = 0;
  } else {
    s.style.opacity = 0;
  }
});

/* small intro animation for poster */
gsap.from('.poster', { y: 20, opacity: 0, duration: 0.8, ease: 'power3.out' });
gsap.from('.filmstrip .thumb', { y: 10, opacity: 0, stagger: 0.06, delay: 0.2 });

/* safety: initial letterbox positions (off-screen will be animated in) */
gsap.set(letterTop, { y: '-120%' });
gsap.set(letterBottom, { y: '120%' });

/* click on poster image also opens cinema */
document.getElementById('posterImg').addEventListener('click', () => openCinema());

/* initial state for progress & counter */
sceneCounter.textContent = `0 / ${biases.length}`;
progressBar.style.width = '0%';

/* touch / swipe quick nav for mobile (rudimentary) */
let touchStartX = null;
scenesWrap.addEventListener('touchstart', (e)=> { touchStartX = e.touches[0].clientX; }, {passive:true});
scenesWrap.addEventListener('touchend', (e)=> {
  if (touchStartX === null) return;
  const delta = e.changedTouches[0].clientX - touchStartX;
  if (delta > 40) prevBtn.click();
  if (delta < -40) nextBtn.click();
  touchStartX = null;
});

/* close cinema when clicking outside screen on overlay area */
cinemaOverlay.addEventListener('click', (ev)=> {
  if (ev.target === cinemaOverlay) closeCinemaOverlay();
});

</script>
</body>
</html>
